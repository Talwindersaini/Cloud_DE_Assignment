CREATE OR REPLACE VIEW "VBI"."REPORTING"."VW_ASSI_1_QUES_1" AS 
WITH ASSI_1_QUES_1 AS (
SELECT
R.REGION,
R.YEAR,
R.PRODUCT,
R.REVENUE_MILLIONS,
CASE WHEN 
TO_DATE(CONCAT_WS('-', R.YEAR, R.MONTH, '01')) BETWEEN PM.VALID_FROM_PERIOD AND PM.VALID_TO_PERIOD
THEN (PM.UNIT_PRICE*R.QUANTITY_SOLD)
END AS COST_OF_PRODUCT,
(R.REVENUE_MILLIONS-COST_OF_PRODUCT) AS NET_REVENUE
FROM "VBI"."DATA_LAKE"."REVENUE" AS R
JOIN "VBI"."DATA_LAKE"."PRODUCT_MASTER" AS PM
ON R.PRODUCT = PM.PRODUCT_CODE
WHERE COST_OF_PRODUCT IS NOT NULL
),
REGION_PRODUCT_NAME AS (
SELECT 
RM.REGION_NAME,
RM.REGION_CODE,
PM.PRODUCT_NAME,
PM.PRODUCT_CODE
FROM "VBI"."DATA_LAKE"."REVENUE" AS R
JOIN "VBI"."DATA_LAKE"."PRODUCT_MASTER" AS PM
ON R.PRODUCT = PM.PRODUCT_CODE
JOIN "VBI"."DATA_LAKE"."REGION_MASTER" AS RM
ON R.REGION = RM.REGION_CODE
GROUP BY RM.REGION_NAME,
RM.REGION_CODE,
PM.PRODUCT_NAME,
PM.PRODUCT_CODE
)
SELECT
RPN.REGION_NAME,
RPN.PRODUCT_NAME,
A1Q1.YEAR,
SUM(REVENUE_MILLIONS) AS REVENUE,
SUM(COST_OF_PRODUCT) AS COST_OF_PRODUCT,
SUM(NET_REVENUE) AS NET_REVENUE
FROM ASSI_1_QUES_1 AS A1Q1
JOIN REGION_PRODUCT_NAME AS RPN
ON A1Q1.REGION = RPN.REGION_CODE
AND A1Q1.PRODUCT = RPN.PRODUCT_CODE
GROUP BY A1Q1.YEAR, RPN.REGION_NAME,
RPN.PRODUCT_NAME;




CREATE OR REPLACE VIEW "VBI"."REPORTING"."VW_ASSI_1_QUES_2" AS 
WITH ASSI_1_QUES_1 AS (
SELECT
R.REGION,
R.YEAR,
R.MONTH,
R.PRODUCT,
R.REVENUE_MILLIONS,
CASE WHEN 
TO_DATE(CONCAT_WS('-', R.YEAR, R.MONTH, '01')) BETWEEN PM.VALID_FROM_PERIOD AND PM.VALID_TO_PERIOD
THEN (PM.UNIT_PRICE*R.QUANTITY_SOLD)
END AS COST_OF_PRODUCT,
(R.REVENUE_MILLIONS-COST_OF_PRODUCT) AS NET_REVENUE
FROM "VBI"."DATA_LAKE"."REVENUE" AS R
JOIN "VBI"."DATA_LAKE"."PRODUCT_MASTER" AS PM
ON R.PRODUCT = PM.PRODUCT_CODE
WHERE COST_OF_PRODUCT IS NOT NULL
),
REGION_PRODUCT_NAME AS (
SELECT 
RM.REGION_NAME,
RM.REGION_CODE,
PM.PRODUCT_NAME,
PM.PRODUCT_CODE
FROM "VBI"."DATA_LAKE"."REVENUE" AS R
JOIN "VBI"."DATA_LAKE"."PRODUCT_MASTER" AS PM
ON R.PRODUCT = PM.PRODUCT_CODE
JOIN "VBI"."DATA_LAKE"."REGION_MASTER" AS RM
ON R.REGION = RM.REGION_CODE
GROUP BY RM.REGION_NAME,
RM.REGION_CODE,
PM.PRODUCT_NAME,
PM.PRODUCT_CODE
)
SELECT
RPN.REGION_NAME,
RPN.PRODUCT_NAME,
A1Q1.YEAR,
A1Q1.MONTH,
SUM(REVENUE_MILLIONS) AS REVENUE,
SUM(COST_OF_PRODUCT) AS COST_OF_PRODUCT,
SUM(NET_REVENUE) AS NET_REVENUE
FROM ASSI_1_QUES_1 AS A1Q1
JOIN REGION_PRODUCT_NAME AS RPN
ON A1Q1.REGION = RPN.REGION_CODE
AND A1Q1.PRODUCT = RPN.PRODUCT_CODE
GROUP BY A1Q1.YEAR, A1Q1.MONTH, RPN.REGION_NAME,
RPN.PRODUCT_NAME;




CREATE OR REPLACE VIEW "VBI"."REPORTING"."VW_ASSI_1_QUES_3" AS 
WITH ASSI_1_QUES_3 AS (
SELECT
R.REGION,
R.YEAR,
R.PRODUCT,
CASE WHEN 
TO_DATE(CONCAT_WS('-', R.YEAR, R.MONTH, '01')) BETWEEN PM.VALID_FROM_PERIOD AND PM.VALID_TO_PERIOD
THEN (PM.UNIT_PRICE*R.QUANTITY_SOLD)
END AS COST_OF_PRODUCT,
(R.REVENUE_MILLIONS-COST_OF_PRODUCT) AS NET_REVENUE
FROM "VBI"."DATA_LAKE"."REVENUE" AS R
JOIN "VBI"."DATA_LAKE"."PRODUCT_MASTER" AS PM
ON R.PRODUCT = PM.PRODUCT_CODE
WHERE COST_OF_PRODUCT IS NOT NULL AND R.YEAR = 2020
),
REGION_PRODUCT_NAME AS (
SELECT 
RM.REGION_NAME,
RM.REGION_CODE,
PM.PRODUCT_NAME,
PM.PRODUCT_CODE
FROM "VBI"."DATA_LAKE"."REVENUE" AS R
JOIN "VBI"."DATA_LAKE"."PRODUCT_MASTER" AS PM
ON R.PRODUCT = PM.PRODUCT_CODE
JOIN "VBI"."DATA_LAKE"."REGION_MASTER" AS RM
ON R.REGION = RM.REGION_CODE
WHERE PM.PRODUCT_NAME IN ('Product A', 'Prodcut B')
GROUP BY RM.REGION_NAME,
RM.REGION_CODE,
PM.PRODUCT_NAME,
PM.PRODUCT_CODE
)
SELECT
RPN.REGION_NAME,
RPN.PRODUCT_NAME,
A1Q1.YEAR,
SUM(NET_REVENUE) AS NET_REVENUE
FROM ASSI_1_QUES_3 AS A1Q1
JOIN REGION_PRODUCT_NAME AS RPN
ON A1Q1.REGION = RPN.REGION_CODE
AND A1Q1.PRODUCT = RPN.PRODUCT_CODE
GROUP BY A1Q1.YEAR, RPN.REGION_NAME,
RPN.PRODUCT_NAME;



CREATE OR REPLACE VIEW "VBI"."REPORTING"."VW_ASSI_1_QUES_4" AS 
WITH ASSI_1_QUES_4 AS (
SELECT
R.REGION,
R.YEAR,
R.PRODUCT,
MAX(R.REVENUE_MILLIONS) AS REVENUE
FROM "VBI"."DATA_LAKE"."REVENUE" AS R
GROUP BY R.REGION, R.YEAR, R.PRODUCT
),
REGION_PRODUCT_NAME AS (
SELECT 
RM.REGION_NAME,
RM.REGION_CODE,
PM.PRODUCT_NAME,
PM.PRODUCT_CODE
FROM "VBI"."DATA_LAKE"."REVENUE" AS R
JOIN "VBI"."DATA_LAKE"."PRODUCT_MASTER" AS PM
ON R.PRODUCT = PM.PRODUCT_CODE
JOIN "VBI"."DATA_LAKE"."REGION_MASTER" AS RM
ON R.REGION = RM.REGION_CODE
GROUP BY RM.REGION_NAME,
RM.REGION_CODE,
PM.PRODUCT_NAME,
PM.PRODUCT_CODE
)
SELECT
RPN.REGION_NAME,
RPN.PRODUCT_NAME,
A1Q1.YEAR,
REVENUE
FROM ASSI_1_QUES_4 AS A1Q1
JOIN REGION_PRODUCT_NAME AS RPN
ON A1Q1.REGION = RPN.REGION_CODE
AND A1Q1.PRODUCT = RPN.PRODUCT_CODE;





CREATE OR REPLACE VIEW "VBI"."REPORTING"."VW_ASSI_1_QUES_5" AS 
WITH ASSI_1_QUES_1 AS (
SELECT
R.REGION,
R.YEAR,
R.MONTH,
R.PRODUCT,
R.REVENUE_MILLIONS,
CASE WHEN 
TO_DATE(CONCAT_WS('-', R.YEAR, R.MONTH, '01')) BETWEEN PM.VALID_FROM_PERIOD AND PM.VALID_TO_PERIOD
THEN (PM.UNIT_PRICE*R.QUANTITY_SOLD)
END AS COST_OF_PRODUCT,
(R.REVENUE_MILLIONS-COST_OF_PRODUCT) AS NET_REVENUE,
AVG(R.REVENUE_MILLIONS-COST_OF_PRODUCT) over(partition by R.MONTH order by R.REGION rows between 3 preceding AND CURRENT ROW) as ROLLING_AVERAGE
FROM "VBI"."DATA_LAKE"."REVENUE" AS R
JOIN "VBI"."DATA_LAKE"."PRODUCT_MASTER" AS PM
ON R.PRODUCT = PM.PRODUCT_CODE
WHERE COST_OF_PRODUCT IS NOT NULL
),
REGION_PRODUCT_NAME AS (
SELECT 
RM.REGION_NAME,
RM.REGION_CODE,
PM.PRODUCT_NAME,
PM.PRODUCT_CODE
FROM "VBI"."DATA_LAKE"."REVENUE" AS R
JOIN "VBI"."DATA_LAKE"."PRODUCT_MASTER" AS PM
ON R.PRODUCT = PM.PRODUCT_CODE
JOIN "VBI"."DATA_LAKE"."REGION_MASTER" AS RM
ON R.REGION = RM.REGION_CODE
GROUP BY RM.REGION_NAME,
RM.REGION_CODE,
PM.PRODUCT_NAME,
PM.PRODUCT_CODE
)
SELECT
RPN.REGION_NAME,
RPN.PRODUCT_NAME,
A1Q1.YEAR,
A1Q1.MONTH,
A1Q1.ROLLING_AVERAGE
FROM ASSI_1_QUES_1 AS A1Q1
JOIN REGION_PRODUCT_NAME AS RPN
ON A1Q1.REGION = RPN.REGION_CODE
AND A1Q1.PRODUCT = RPN.PRODUCT_CODE
GROUP BY A1Q1.YEAR, A1Q1.MONTH, RPN.REGION_NAME,
RPN.PRODUCT_NAME, A1Q1.ROLLING_AVERAGE;




CREATE OR REPLACE VIEW "VBI"."REPORTING"."VW_ASSI_1_QUES_6" AS 
WITH ASSI_1_QUES_1 AS (
SELECT
R.REGION,
R.YEAR,
R.MONTH,
R.PRODUCT,
R.REVENUE_MILLIONS,
(R.REVENUE_MILLIONS/R.QUANTITY_SOLD) AS AVG_SELL_PRICE,
AVG((R.REVENUE_MILLIONS/R.QUANTITY_SOLD)) over(partition by R.MONTH order by R.REGION rows between 6 preceding AND CURRENT ROW) as ROLLING_AVERAGE_SELL_PRICE
FROM "VBI"."DATA_LAKE"."REVENUE" AS R
),
REGION_PRODUCT_NAME AS (
SELECT 
RM.REGION_NAME,
RM.REGION_CODE,
PM.PRODUCT_NAME,
PM.PRODUCT_CODE
FROM "VBI"."DATA_LAKE"."REVENUE" AS R
JOIN "VBI"."DATA_LAKE"."PRODUCT_MASTER" AS PM
ON R.PRODUCT = PM.PRODUCT_CODE
JOIN "VBI"."DATA_LAKE"."REGION_MASTER" AS RM
ON R.REGION = RM.REGION_CODE
GROUP BY RM.REGION_NAME,
RM.REGION_CODE,
PM.PRODUCT_NAME,
PM.PRODUCT_CODE
)
SELECT
RPN.REGION_NAME,
RPN.PRODUCT_NAME,
A1Q1.YEAR,
A1Q1.MONTH,
A1Q1.AVG_SELL_PRICE,
A1Q1.ROLLING_AVERAGE_SELL_PRICE
FROM ASSI_1_QUES_1 AS A1Q1
JOIN REGION_PRODUCT_NAME AS RPN
ON A1Q1.REGION = RPN.REGION_CODE
AND A1Q1.PRODUCT = RPN.PRODUCT_CODE
GROUP BY A1Q1.YEAR, A1Q1.MONTH, RPN.REGION_NAME,
RPN.PRODUCT_NAME, A1Q1.AVG_SELL_PRICE,
A1Q1.ROLLING_AVERAGE_SELL_PRICE;
